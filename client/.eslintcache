[{"/Users/leabryant/Desktop/connect-able/client/src/index.js":"1","/Users/leabryant/Desktop/connect-able/client/src/App.js":"2","/Users/leabryant/Desktop/connect-able/client/src/pages/Home.js":"3","/Users/leabryant/Desktop/connect-able/client/src/pages/Signup.js":"4","/Users/leabryant/Desktop/connect-able/client/src/pages/Profile.js":"5","/Users/leabryant/Desktop/connect-able/client/src/components/Header.js":"6","/Users/leabryant/Desktop/connect-able/client/src/components/Footer.js":"7","/Users/leabryant/Desktop/connect-able/client/src/components/Login.js":"8","/Users/leabryant/Desktop/connect-able/client/src/utils/auth.js":"9","/Users/leabryant/Desktop/connect-able/client/src/components/Nav.js":"10","/Users/leabryant/Desktop/connect-able/client/src/utils/mutations.js":"11"},{"size":268,"mtime":1665949315810,"results":"12","hashOfConfig":"13"},{"size":1597,"mtime":1665958836928,"results":"14","hashOfConfig":"13"},{"size":334,"mtime":1665958823273,"results":"15","hashOfConfig":"13"},{"size":9508,"mtime":1665971717949,"results":"16","hashOfConfig":"13"},{"size":244,"mtime":1665971168376,"results":"17","hashOfConfig":"13"},{"size":332,"mtime":1665971420591,"results":"18","hashOfConfig":"13"},{"size":348,"mtime":1665954173739,"results":"19","hashOfConfig":"13"},{"size":3343,"mtime":1665954173739,"results":"20","hashOfConfig":"13"},{"size":1033,"mtime":1665854695204,"results":"21","hashOfConfig":"13"},{"size":353,"mtime":1665958823272,"results":"22","hashOfConfig":"13"},{"size":1612,"mtime":1665958836929,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"j87s2m",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/leabryant/Desktop/connect-able/client/src/index.js",[],["49","50"],"/Users/leabryant/Desktop/connect-able/client/src/App.js",["51"],"import React from 'react';\nimport { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport { ApolloClient, InMemoryCache, ApolloProvider, createHttpLink } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport Home from './pages/Home';\nimport Profile from './pages/Profile';\nimport Signup from './pages/Signup';\n\n// const client = new ApolloClient({\n//   uri: '/graphql',\n//   cache: new InMemoryCache(),\n// });\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"flex-column justify-center align-center min-100-vh bg-primary\">\n          <Routes>\n            <Route \n              path=\"/\" \n              element={<Home />}\n            />\n            <Route \n              path=\"/profile\" \n              element={<Profile />}\n            />\n            <Route \n              path=\"/signup\" \n              element={<Signup />}\n            />\n          </Routes>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n};\n\n\nexport default App;","/Users/leabryant/Desktop/connect-able/client/src/pages/Home.js",[],"/Users/leabryant/Desktop/connect-able/client/src/pages/Signup.js",["52"],"/Users/leabryant/Desktop/connect-able/client/src/pages/Profile.js",["53"],"/Users/leabryant/Desktop/connect-able/client/src/components/Header.js",[],"/Users/leabryant/Desktop/connect-able/client/src/components/Footer.js",[],"/Users/leabryant/Desktop/connect-able/client/src/components/Login.js",["54"],"import React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport { useMutation } from '@apollo/client';\n\n// import { loginUser } from '../utils/API';\nimport { LOGIN_USER } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nconst Login = () => {\n  const [userFormData, setUserFormData] = useState({ email: '', password: '' });\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n  const [login, { error }] = useMutation(LOGIN_USER);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  // function that accepts the book's mongo _id value as param and deletes the book from the database\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(userFormData);\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const { data } = await login({\n        variables: { ...userFormData },\n      });\n\n      Auth.login(data.login.token);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: '',\n      email: '',\n      password: '',\n    });\n  };\n\n  const mystyle = {\n    color: \"white\",\n    padding: \"10px\",\n    fontFamily: \"Arial\"\n  };\n  const button = {\n    color: \"white\",\n    backgroundColor: \"Gray\",\n    padding: \"10px\",\n    fontFamily: \"Arial\"\n  };\n\n  return (\n    <>\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your login credentials!\n        </Alert>\n        <Form.Group style={mystyle}>\n          <Form.Label htmlFor='email'>Email</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your email'\n            name='email'\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group style={mystyle}>\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group style={mystyle}>\n        <Button\n          style={button}\n          disabled={!(userFormData.email && userFormData.password)}\n          type='submit'\n          variant='success'>\n          Submit\n        </Button>\n        </Form.Group>\n\n        <Form.Group style={mystyle} >\n        <Button\n          style={button}\n          disabled={!(userFormData.email && userFormData.password)}\n          type='submit'\n          variant='success'>\n          Not a Member? Register Now\n        </Button>\n        </Form.Group>\n      </Form>\n    </>\n  );\n};\n\nexport default Login;","/Users/leabryant/Desktop/connect-able/client/src/utils/auth.js",[],"/Users/leabryant/Desktop/connect-able/client/src/components/Nav.js",[],"/Users/leabryant/Desktop/connect-able/client/src/utils/mutations.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":2,"column":50,"nodeType":"61","messageId":"62","endLine":2,"endColumn":54},{"ruleId":"59","severity":1,"message":"63","line":35,"column":21,"nodeType":"61","messageId":"62","endLine":35,"endColumn":26},{"ruleId":"59","severity":1,"message":"64","line":3,"column":8,"nodeType":"61","messageId":"62","endLine":3,"endColumn":11},{"ruleId":"59","severity":1,"message":"63","line":13,"column":19,"nodeType":"61","messageId":"62","endLine":13,"endColumn":24},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'Nav' is defined but never used.","no-global-assign","no-unsafe-negation"]