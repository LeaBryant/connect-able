[{"C:\\Users\\krspa\\Bootcamp\\connect-able\\client\\src\\index.js":"1","C:\\Users\\krspa\\Bootcamp\\connect-able\\client\\src\\App.js":"2","C:\\Users\\krspa\\Bootcamp\\connect-able\\client\\src\\pages\\Profile.js":"3","C:\\Users\\krspa\\Bootcamp\\connect-able\\client\\src\\pages\\Home.js":"4","C:\\Users\\krspa\\Bootcamp\\connect-able\\client\\src\\pages\\Signup.js":"5","C:\\Users\\krspa\\Bootcamp\\connect-able\\client\\src\\components\\Login.js":"6","C:\\Users\\krspa\\Bootcamp\\connect-able\\client\\src\\components\\Header.js":"7","C:\\Users\\krspa\\Bootcamp\\connect-able\\client\\src\\components\\Footer.js":"8","C:\\Users\\krspa\\Bootcamp\\connect-able\\client\\src\\utils\\mutations.js":"9","C:\\Users\\krspa\\Bootcamp\\connect-able\\client\\src\\utils\\auth.js":"10"},{"size":271,"mtime":1665794529933,"results":"11","hashOfConfig":"12"},{"size":962,"mtime":1665803849005,"results":"13","hashOfConfig":"12"},{"size":275,"mtime":1665862918440,"results":"14","hashOfConfig":"12"},{"size":289,"mtime":1665857773883,"results":"15","hashOfConfig":"12"},{"size":3827,"mtime":1665862243567,"results":"16","hashOfConfig":"12"},{"size":1792,"mtime":1665863278946,"results":"17","hashOfConfig":"12"},{"size":425,"mtime":1665863236603,"results":"18","hashOfConfig":"12"},{"size":289,"mtime":1665803849006,"results":"19","hashOfConfig":"12"},{"size":1614,"mtime":1665862303604,"results":"20","hashOfConfig":"12"},{"size":1033,"mtime":1665794529935,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1978xf7",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\krspa\\Bootcamp\\connect-able\\client\\src\\index.js",[],["44","45"],"C:\\Users\\krspa\\Bootcamp\\connect-able\\client\\src\\App.js",[],"C:\\Users\\krspa\\Bootcamp\\connect-able\\client\\src\\pages\\Profile.js",[],"C:\\Users\\krspa\\Bootcamp\\connect-able\\client\\src\\pages\\Home.js",[],"C:\\Users\\krspa\\Bootcamp\\connect-able\\client\\src\\pages\\Signup.js",["46"],"import React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\n\nimport { useMutation } from '@apollo/client';\nimport { NEW_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\n\nconst Signup = () => {\n  // set initial form state\n  const [userFormData, setUserFormData] = useState({ \n    username: '', \n    email: '', \n    password: '',\n    name: '',\n    lookingForLove: '',\n    lookingForFriends:'',\n    DOB: '',\n    gender: '',\n    orientation: '',\n    location: '',\n    aboutMe: '',\n    interests: '',\n    selfIdentify: '',\n    disability: ''\n    });\n  // set state for form validation\n  const [validated] = useState(false);\n  // set state for alert\n  const [showAlert, setShowAlert] = useState(false);\n\n  const [newUser, { error }] = useMutation(NEW_USER);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const { data } = await newUser({\n        variables: { ...userFormData },\n      });\n      \n      if (!{ data }) {\n        throw new Error('something went wrong!');\n      }\n      Auth.login(data.newUser.token);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n        username: '', \n        email: '',\n        name: '', \n        password: '',\n        lookingForLove: '',\n        lookingForFriends:'',\n        DOB: '',\n        gender: '',\n        orientation: '',\n        location: '',\n        aboutMe: '',\n        interests: '',\n        selfIdentify: '',\n        disability: ''\n    });\n  };\n\n  return (\n    <>\n      {/* This is needed for the validation functionality above */}\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        {/* show alert if server response is bad */}\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your signup!\n        </Alert>\n\n        <Form.Group>\n          <Form.Label htmlFor='username'>Username</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your username'\n            name='username'\n            onChange={handleInputChange}\n            value={userFormData.username}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Username is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='email'>Email</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Your email address'\n            name='email'\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.username && userFormData.email && userFormData.password)}\n          type='submit'\n          variant='success'>\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default Signup;","C:\\Users\\krspa\\Bootcamp\\connect-able\\client\\src\\components\\Login.js",["47","48","49"],"C:\\Users\\krspa\\Bootcamp\\connect-able\\client\\src\\components\\Header.js",[],"C:\\Users\\krspa\\Bootcamp\\connect-able\\client\\src\\components\\Footer.js",[],"C:\\Users\\krspa\\Bootcamp\\connect-able\\client\\src\\utils\\mutations.js",[],"C:\\Users\\krspa\\Bootcamp\\connect-able\\client\\src\\utils\\auth.js",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":33,"column":21,"nodeType":"56","messageId":"57","endLine":33,"endColumn":26},{"ruleId":"54","severity":1,"message":"58","line":2,"column":10,"nodeType":"56","messageId":"57","endLine":2,"endColumn":14},{"ruleId":"54","severity":1,"message":"59","line":2,"column":16,"nodeType":"56","messageId":"57","endLine":2,"endColumn":22},{"ruleId":"54","severity":1,"message":"60","line":2,"column":24,"nodeType":"56","messageId":"57","endLine":2,"endColumn":29},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'Form' is defined but never used.","'Button' is defined but never used.","'Alert' is defined but never used.","no-global-assign","no-unsafe-negation"]